% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conditional_filter-utils.R
\name{detect_controller}
\alias{detect_controller}
\alias{logical_controller}
\alias{switch_controller}
\title{Build a controller based on data}
\usage{
detect_controller(
  dat,
  session = getDefaultReactiveDomain(),
  labels = character(1),
  external = character(1),
  remove_na = FALSE,
  update = FALSE
)

logical_controller(
  dat,
  session,
  labels = "Various",
  external = character(1),
  ignore = character(1),
  remove_na = FALSE,
  update = FALSE
)

switch_controller(
  dat,
  method = "length",
  val = 1,
  external = character(1),
  ignore = character(1),
  remove_na = FALSE,
  logical = FALSE
)
}
\arguments{
\item{dat}{The data supplied as \code{dataframe} or \code{tibble}.}

\item{session}{Shiny session object.}

\item{labels}{Labels for the controllers (defaults to the variable names).
Must be a named vector where the names refer to the names of the original
data.}

\item{external}{\code{reactiveValues} assigning external filter variables to the
module.}

\item{remove_na}{Logical indicating whether NAs should be removed during
filtering (defaults to FALSE).}

\item{update}{Logical indicating whether ui controllers are ui- or
server-side for updating the controllers ranges.}

\item{ignore}{Character string/vector for variables to be ignored for
filtering of the dataset.}

\item{method}{Method to use for switch_controller condition (defaults to
\code{length}).}

\item{val}{Value to use for switch_controller condition (defaults to
\code{1})}

\item{logical}{Boolean to determine whether the switch_controller is
constructed for logical values.}
}
\value{
Shiny controller call.
}
\description{
Build a controller based on data
}
