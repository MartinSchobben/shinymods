% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conditional_filter-module.R
\name{filter_ui}
\alias{filter_ui}
\alias{filter_server}
\title{Conditional filter module}
\usage{
filter_ui(
  id,
  dat,
  labels = NULL,
  logi = NULL,
  update = FALSE,
  session = getDefaultReactiveDomain(),
  shinyjs = FALSE
)

filter_server(id, dat, shinyjs = FALSE)
}
\arguments{
\item{id}{Namespace of the module.}

\item{dat}{The data supplied as \code{dataframe} or tibble.}

\item{labels}{Labels for the controllers (defaults to the variable names).}

\item{logi}{Label for the controller of logical variables (defaults to
\code{"Various"}.}

\item{update}{Logical indicating whether ui controllers are ui- or
server-side for updating the controllers ranges.}

\item{session}{The shiny session domain.}

\item{shinyjs}{A logical indicating whether shinyjs \code{ToggleState()} is
included to disable controllers.}
}
\value{
Shiny module.
}
\description{
The module is constructed so that the filter controls are updated based on
the data range.
}
